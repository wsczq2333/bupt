#include<Arduino.h>
#include <SoftwareSerial.h>
#include <Servo.h> 
Servo myservo;  
SoftwareSerial mySerial(10, 11); 
char nmeaSentence[68];
String latitude;  
String longitude;  
String beiJingTime;  
String gpsTime;




#define Sensor A5
#define Sensor_DO 2
#define GPSSerial Serial
#define ADpin A0  
unsigned int SensorValue = 0;
int ADBuffer = 0;
void SendMessage()
{
  mySerial.print("AT+CSCS=\"GSM\"\r\n");
  delay(1000);
  mySerial.print("AT+CMGF=1\r\n");
  delay(1000);
  
  mySerial.print("AT+CMGS=\"xxxxxxxxxxx\"\r\n");
  delay(1000);
  mySerial.print("SensorValue:");      
  mySerial.println(SensorValue);
  mySerial.print("latitude:");        
  mySerial.println(latitude);
  mySerial.print("longitude: " );    
  mySerial.println(longitude);
  mySerial.print("beiJingTime: ");   
  mySerial.println(beiJingTime);
  delay(1000);
  mySerial.write(0x1A);
  delay(2000);
}


void Gas()
  {     
          pinMode(Sensor_DO,INPUT);
          pinMode(Sensor,INPUT);  
          Serial.begin(9600);
        
        SensorValue=analogRead(Sensor);      
        SensorValue = 10*SensorValue;
       Serial.print("SensorValue: ");
    Serial.println(SensorValue);  

    }



void GPS()
{
 GPSSerial.begin(9600);      
  for (unsigned long start = millis(); millis() - start < 1000;)  
    while (GPSSerial.available()) 
    {
      char c = GPSSerial.read(); 

      switch(c)         
      {
      case '$':         
        GPSSerial.readBytesUntil('*', nmeaSentence, 67);   
        //Serial.println(nmeaSentence);
        latitude = parseGprmcLat(nmeaSentence); 
        latitude.substring(6);
        longitude = parseGprmcLon(nmeaSentence);
        gpsTime = parseGprmcTime(nmeaSentence);

        if(latitude > "")   
        {
          GPSSerial.println("------------------------------------");
          GPSSerial.println("latitude: " + latitude);
        }

        if(longitude > "")   
        {
          GPSSerial.println("longitude: " + longitude);
        }  
        if(gpsTime > "")   
        {
          beiJingTime = getBeiJingTime(gpsTime);  
          GPSSerial.println("beiJingTime: " + beiJingTime);        
        }   
      }
    }
  }
}

String getBeiJingTime(String s)
{
  int hour = s.substring(0,2).toInt();
  int minute = s.substring(2,4).toInt();
  int second = s.substring(4,6).toInt();

  hour += 8;

  if(hour > 24)
    hour -= 24;
  s = String(hour) +":"+String(minute) +":"+ String(second);
  return s;
}

String parseGprmcLat(String s)
{
  int pLoc = 0; 
  int lEndLoc = 0; 
  int dEndLoc = 0; /
  String lat;
  if(s.substring(0,4) == "GPRM")
  {
    //Serial.println(s);
    for(int i = 0; i < 5; i++)
    {
      if(i < 3) 
      {
        pLoc = s.indexOf(',', pLoc+1);
      }
      if(i == 3)
      {
        lEndLoc = s.indexOf(',', pLoc+1);
        lat = s.substring(pLoc+1, lEndLoc);
      }
      else
      {
        dEndLoc = s.indexOf(',', lEndLoc+1);
        lat = lat + " " + s.substring(lEndLoc+1, dEndLoc);
      }
    }
    return lat; 
  }
}

String parseGprmcLon(String s)
{
  int pLoc = 0;
  int lEndLoc = 0; 
  int dEndLoc = 0; 
  String lon;
  
  if(s.substring(0,4) == "GPRM")
  {
    //Serial.println(s);
    for(int i = 0; i < 7; i++)
    {
      if(i < 5) 
      {
        pLoc = s.indexOf(',', pLoc+1);
      }
      if(i == 5)
      {
        lEndLoc = s.indexOf(',', pLoc+1);
        lon = s.substring(pLoc+1, lEndLoc);
      }
      else
      {
        dEndLoc = s.indexOf(',', lEndLoc+1);
        lon = lon + " " + s.substring(lEndLoc+1, dEndLoc);
      }
    }
    return lon; 
  }
}


String parseGprmcTime(String s)
{
  int pLoc = 0; //paramater location pointer
  int lEndLoc = 0; //lat parameter end location
  int dEndLoc = 0; //direction parameter end location
  String gpsTime;
  if(s.substring(0,4) == "GPRM")
  {
    //Serial.println(s);
    for(int i = 0; i < 2; i++)
    {
      if(i < 1) 
      {
        pLoc = s.indexOf(',', pLoc+1);
      }
      else
      {
        lEndLoc = s.indexOf(',', pLoc+1);
        gpsTime = s.substring(pLoc+1, lEndLoc);
      }
    }
    return gpsTime; 
  }
}


String charToString(char *c)
{

  String val = "";

  for(int i = 0; i <= sizeof(c); i++) 
  {
    val = val + c[i];
  }

  return val;
  }
 

   void fire()
   {
  Serial.println(analogRead(A0));
  ADBuffer = analogRead(ADpin);    
  Serial.print("AD = ");  
  Serial.println(ADBuffer);  
    }



void loop() {
         GPS();
         Gas();
         fire();        
         delay(1000);
         if(SensorValue>800||ADBuffer < 1000)
         {
          SendMessage();
          GPS();  
         }
}
